name: Daily Data Crawling and Deployment

on:
  schedule:
    - cron: '0 2 * * *'  # Run daily at 2 AM UTC
  workflow_dispatch:  # Manual trigger
  push:
    branches: [main]  # Also run on pushes to main

env:
  GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
  RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

jobs:
  crawl-and-process:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    
    - name: Setup C++ Environment
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Build Crawler
      run: |
        cd crawler
        mkdir -p build
        cd build
        cmake ..
        make -j$(nproc)
        
    - name: Run Crawler
      run: |
        cd crawler/build
        ./web_crawler --max-pages 1000 --output ../data/
        ls -la ../data/
        
    - name: Setup Python for Data Processing
      run: |
        cd ai_search/data_pipeline
        pip install -r requirements.txt || pip install pandas sqlite3
        
    - name: Process Crawled Data
      run: |
        cd ai_search/data_pipeline
        python process_crawled_data.py
        
    - name: Upload Database Artifact
      uses: actions/upload-artifact@v4
      with:
        name: search-database-${{ github.sha }}
        path: ai_search/backend/data/processed/documents.db
        retention-days: 30
        
    - name: Install Railway CLI
      run: |
        npm install -g @railway/cli
        
    - name: Deploy Backend to Railway
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
      run: |
        cd ai_search/backend
        railway up --service backend --detach
        
    - name: Deploy AI Runner to Railway
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
      run: |
        cd ai_search/ai_runner
        railway up --service ai-runner --detach
        
    - name: Health Check
      run: |
        sleep 60  # Wait for deployment
        curl -f https://your-backend-url.railway.app/api/health || exit 1
        curl -f https://your-ai-runner-url.railway.app/health || exit 1
        
    - name: Notify Success
      if: success()
      run: |
        echo "‚úÖ Daily crawling and deployment completed successfully!"
        echo "üìä Database updated with latest web data"
        echo "üöÄ Services deployed and healthy"
        
    - name: Notify Failure
      if: failure()
      run: |
        echo "‚ùå Daily crawling or deployment failed!"
        echo "üîç Check the logs for details"

  # Optional: Build and push Docker images
  build-docker-images:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Build and Push Frontend Image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ai_search/frontend/Dockerfile
        push: true
        tags: ghcr.io/${{ github.repository }}/frontend:latest
        
    - name: Build and Push Backend Image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ai_search/backend/Dockerfile
        push: true
        tags: ghcr.io/${{ github.repository }}/backend:latest
        
    - name: Build and Push AI Runner Image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ai_search/ai_runner/Dockerfile
        push: true
        tags: ghcr.io/${{ github.repository }}/ai-runner:latest
